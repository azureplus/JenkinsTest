apply plugin: 'com.android.application'
apply plugin: 'walle'

android {
    signingConfigs {
        sign {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('../tool_output/kaleidoscope.jks')
            storePassword 'r66086729'
            //v2SigningEnabled false  //作用是只使用旧版签名，禁用V2版签名模式
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.renny.jenkinstest"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.sign
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.sign
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions( "member","channel")
    productFlavors {

        baidu {
            buildConfigField "String", "CONFIG_ENDPOINT", "\"www.baidu.com\""
            dimension "channel"
        }

        xiaomi {
            buildConfigField "String", "CONFIG_ENDPOINT", "\"www.mi.com\""
            dimension "channel"
        }

        vip {
            applicationId "com.example.branchTwo"
            dimension "member"
        }

        free{
            applicationId "com.example.branchOne"
            dimension "member"
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk'
    // 渠道配置文件
    channelFile = new File("markets.txt")
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:multidex:1.0.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.meituan.android.walle:library:1.1.6'
}
